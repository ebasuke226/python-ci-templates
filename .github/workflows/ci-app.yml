name: ci-app
on: [push, pull_request]

jobs:
  app:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      # ---- Python toolchain (backend用)
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            backend/requirements-dev.txt
            backend/requirements.txt

      - name: Install backend dev deps (if any)
        if: ${{ hashFiles('backend/requirements-dev.txt') != '' }}
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -r requirements-dev.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # ---- Static quality (backend only if pyproject exists)
      - name: Ruff format (check)
        if: ${{ hashFiles('backend/pyproject.toml') != '' }}
        working-directory: backend
        run: ruff format --check .

      - name: Ruff check
        if: ${{ hashFiles('backend/pyproject.toml') != '' }}
        working-directory: backend
        run: ruff check .

      - name: mypy
        if: ${{ hashFiles('backend/pyproject.toml') != '' }}
        working-directory: backend
        run: mypy .

      # ---- Dependency audit (prod依存のみ・無ければskip)
      - name: Dependency audit (pip-audit)
        if: ${{ hashFiles('backend/requirements.txt') != '' }}
        working-directory: backend
        run: |
          pip install pip-audit
          pip-audit -r requirements.txt

      # ---- Node toolchain (Reactの場合だけ)
      - name: Setup Node
        if: ${{ hashFiles('frontend/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Frontend build (React)
        if: ${{ hashFiles('frontend/package.json') != '' }}
        working-directory: frontend
        run: |
          npm ci
          npm run build

      # ---- Docker / Compose build & smoke
      - uses: docker/setup-buildx-action@v3

      - name: Build images
        if: ${{ hashFiles('docker-compose.yml') != '' }}
        run: docker compose build

- name: "Smoke: API (http://localhost:8000/health[|z])"
  if: ${{ hashFiles('docker-compose.yml') != '' }}
  run: |
    docker compose up -d api || true
    for p in /health /healthz; do
      for i in $(seq 1 10); do
        if curl -fsS "http://localhost:8000${p}" > /dev/null; then
          echo "API OK at ${p}"
          docker compose logs api --tail=50
          exit 0
        fi
        sleep 3
      done
    done
    docker compose logs api
    docker compose down -v || true
    exit 1

    - name: "Smoke: Web (3000 or 8501)"
      if: ${{ hashFiles('docker-compose.yml') != '' }}
      run: |
        if ! docker compose config --services | grep -q '^web$'; then
          echo "No 'web' service -> skip"
          exit 0
        fi
        docker compose up -d web || true
        for port in 3000 8501; do
          for i in $(seq 1 10); do
            if curl -fsS "http://localhost:${port}/" > /dev/null; then
              echo "WEB OK at port ${port}"
              docker compose logs web --tail=50
              docker compose down -v || true
              exit 0
            fi
            sleep 3
          done
        done
        docker compose logs web
        docker compose down -v || true
        exit 1

      - name: Compose down
        if: ${{ hashFiles('docker-compose.yml') != '' }}
        run: docker compose down -v || true
